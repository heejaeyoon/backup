/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-01-10 00:58:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import user.User;
import user.UserDAO;
import java.util.ArrayList;

public final class top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("user.User");
    _jspx_imports_classes.add("user.UserDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("hr {\n");
      out.write("	border-bottom: none;\n");
      out.write("	border-left: none;\n");
      out.write("	border-right: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav input { /* 검색어 */\n");
      out.write("	border-color: #565656;\n");
      out.write("	background-image: url(\"");
      out.print(request.getContextPath());
      out.write("/image/search.jpg\");\n");
      out.write("	background-repeat: no-repeat;\n");
      out.write("	background-position: right;\n");
      out.write("	border-radius: 15px;\n");
      out.write("	background-size: 25px;\n");
      out.write("	outline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul { /* 로그인 칸*/\n");
      out.write("	list-style-type: none;\n");
      out.write("	/* 좌측 여백 없애기 */\n");
      out.write("	padding-left: 0px;\n");
      out.write("	/* 우측 정렬 하기 */\n");
      out.write("	float: right;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li { /* 로그인칸 */\n");
      out.write("	display: inline;\n");
      out.write("	border-left: 1px solid;\n");
      out.write("	padding: 0px 10px 0px 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li:first-child { /* 로그인버튼 */\n");
      out.write("	border-left: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: #565656; /* #5d5d5d */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top {\n");
      out.write("	font-size: 12px;\n");
      out.write("	width: 300px;\n");
      out.write("	height: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".newlogin {\n");
      out.write("	color: #72aa37;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body { /* 전체 글꼴 */\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".bottom {\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write("/*====================================  */\n");
      out.write("* {\n");
      out.write("	list-style: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: #57523E;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#menu {\n");
      out.write("	position: relative;\n");
      out.write("	z-index: 99;\n");
      out.write("	background-color: white;\n");
      out.write("	height: 50px;\n");
      out.write("	text-align: center;\n");
      out.write("	width: 300px;\n");
      out.write("	margin-left: 400px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("[class*=\"main\"] {\n");
      out.write("	background-color: white;\n");
      out.write("	border-radius: 5px 5px 5px 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("[class*=\"main\"] ul {\n");
      out.write("	border-radius: 5px 5px 5px 5px;\n");
      out.write("	border: 1px solid #57523E;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1 {\n");
      out.write("	padding-left: 0px;\n");
      out.write("	height: 100%;\n");
      out.write("	width: 1000px;\n");
      out.write("	margin: 0 auto;\n");
      out.write("	display: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li {\n");
      out.write("	float: left;\n");
      out.write("	width: 13%;\n");
      out.write("	line-height: 50px;\n");
      out.write("	position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li:hover .main2 {\n");
      out.write("	left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li a {\n");
      out.write("	display: block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li a:hover {\n");
      out.write("	font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2 {\n");
      out.write("	text-align: left;\n");
      out.write("	width: 170%;\n");
      out.write("	position: absolute;\n");
      out.write("	top: 50px;\n");
      out.write("	left: -9999px;\n");
      out.write("	padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li:hover {\n");
      out.write("	border-bottom: 3px solid #8ca86e;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main1>li:hover:last-child {\n");
      out.write("	border-bottom: white; /* 장바구니 밑에 색없애기위해. */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2 li:hover {\n");
      out.write("	border-left: 4px solid #8ca86e;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2>li {\n");
      out.write("	position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2>li:hover .main3 {\n");
      out.write("	left: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2>li a, .main3>li a {\n");
      out.write("	border-radius: 10px;\n");
      out.write("	margin: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main3 {\n");
      out.write("	position: absolute;\n");
      out.write("	top: -10px;\n");
      out.write("	width: 100%;\n");
      out.write("	left: -9999px;\n");
      out.write("	padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main3>li a:hover {\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("	margin-top: 20px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("	src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery.js\"></script>\n");
      out.write("<script>\n");
      out.write("	function ClickCartList(){\n");
      out.write("		var id ='");
      out.print((String) session.getAttribute("id"));
      out.write("';\n");
      out.write("		if(id==\"null\"){\n");
      out.write("			if(confirm(\"로그인이 필요한 페이지 입니다.\\n 로그인 하시겠습니까?\")){\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("\" + \"/login.jsp\";\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			   location.href=\"");
      out.print(request.getContextPath());
      out.write("\n");
      out.write("	\" + \"/main.jsp\";\n");
      out.write("		}\n");
      out.write("\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<!-- notosans 폰트 적용 -->\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<body>\n");
      out.write("	");

	/*id 에 해당하는 이름 가져오기  */
	//String id =(String)session.getAttribute("id");
	String id = "dbsgmlwo78";

	UserDAO udaoDao = UserDAO.getinstance();
	User user = udaoDao.getUserById(id);
	System.out.println(user);
	
      out.write("\n");
      out.write("\n");
      out.write("	<form>\n");
      out.write("		<input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\n");
      out.write("	</form>\n");
      out.write("	<div class=\"top\" align=\"right\">\n");
      out.write("		<ul>\n");
      out.write("			");

			if (id != null) {
			
      out.write("\n");
      out.write("			<li><a class=\"newlogin\"\n");
      out.write("				href=\"");
      out.print(request.getContextPath());
      out.write("/mypage.jsp?id=");
      out.print(user.getUserId());
      out.write("\"><font\n");
      out.write("					color=\"#8ca86e\">");
      out.print(user.getUserName());
      out.write("님</font> <font\n");
      out.write("					color=\"#5d5d5d\">마이페이지</font></a></li>\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/logout.jsp\">로그아웃</a></li>\n");
      out.write("\n");
      out.write("			");

			} else {
			
      out.write("\n");
      out.write("			<li><a class=\"newlogin\"\n");
      out.write("				href=\"");
      out.print(request.getContextPath());
      out.write("/register.jsp\">회원가입</a></li>\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/login.jsp\">로그인</a></li>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath());
      out.write("'여기에 고객센터 넣어주세요.jsps'\">고객센터</a></li>\n");
      out.write("		</ul>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<!-- 로고  -->\n");
      out.write("\n");
      out.write("	<div align=\"center\" class=\"logo\">\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/main.jsp\"><img\n");
      out.write("			src=\"");
      out.print(request.getContextPath());
      out.write("/image/mama.png\" width=400\n");
      out.write("			height=150></a>\n");
      out.write("	</div>\n");
      out.write("	<br>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<!--상단 메뉴바  -->\n");
      out.write("\n");
      out.write("\n");
      out.write("	<!-- 일반 사용자일때 메뉴바 -->\n");
      out.write("	<div id=\"menu\">\n");
      out.write("		<ul class=\"main1\">\n");
      out.write("			<li style=\"border: none;\"><a href=\"#\"><b\n");
      out.write("					style=\"font-size: 20px;\"><span style=\"font-size: 20px;\">≡</span>\n");
      out.write("						카테고리</b></a>\n");
      out.write("				<ul class=\"main2\">\n");
      out.write("\n");
      out.write("					");

					//         CategoryDao cdao = CategoryDao.getinstance();
					//       	CategoryDao2 cdao2 = CategoryDao2.getinstance();

					//       	ArrayList<CategoryBean>lists = cdao.getAllCategory(); 
					//       	ArrayList<CategoryBean2>list = null;

					//       	System.out.println("CategoryBean list:"+lists.size());
					// 		System.out.println("CategoryBean2 list:"+lists.size());
					//         for(CategoryBean cb : lists){
					
      out.write("\n");
      out.write("					");
      out.write("\n");
      out.write("<!-- 					<ul class=\"main3\"> -->\n");
      out.write("\n");
      out.write("// 						list = cdao2.getAllCategory(cb.getCode1());\n");
      out.write("// 						for (CategoryBean2 cb2 : list) {\n");
      out.write("\n");
      out.write("<!-- 						<li><a -->\n");
      out.write('\n');
      out.write("\n");
      out.write("// 						// }//CategoryBean2\n");
      out.write("\n");
      out.write("<!-- 					</ul></li> -->\n");
      out.write("			");

// 			} //CategoryBean
			
      out.write("\n");
      out.write("		</ul>\n");
      out.write("		</li>\n");
      out.write("		");

		String[] menubar = { "BEST", "신상품", "알뜰상품", "기획상품" };
		for (int i = 0; i < menubar.length; i++) {
		
      out.write("\n");
      out.write("<!-- 		<li><a -->\n");
      out.write('\n');
      out.write("\n");
      out.write("// 		}\n");
      out.write("\n");
      out.write("		<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/coupon.jsp\">특가 /\n");
      out.write("				혜택</a></li>\n");
      out.write("		<li style=\"margin-left: 50px; padding-bottom: 0;\"><a\n");
      out.write("			href=\"javascript:ClickCartList()\"><img width=\"35px\" height=\"35px\"\n");
      out.write("				src=\"");
      out.print(request.getContextPath());
      out.write("/image/cart.png\"></a></li>\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("	<hr width=80% class=\"categoryhr\">");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
