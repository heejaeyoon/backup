/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-01-10 00:28:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.guest;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.text.DecimalFormat;
import my.shop.ProductBean;
import java.util.ArrayList;
import my.shop.ProductDao;
import my.shop.CategoryBean2;
import my.shop.CategoryDao2;
import my.shop.CategoryBean;
import java.util.ArrayList;
import my.shop.CategoryDao;
import my.member.MemberBean;
import my.member.MemberDao;

public final class outCategory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/bottom.jsp", Long.valueOf(1671338957000L));
    _jspx_dependants.put("/top.jsp", Long.valueOf(1673259520981L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("my.shop.CategoryDao");
    _jspx_imports_classes.add("my.member.MemberBean");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("my.shop.ProductBean");
    _jspx_imports_classes.add("my.shop.CategoryBean");
    _jspx_imports_classes.add("my.member.MemberDao");
    _jspx_imports_classes.add("my.shop.CategoryDao2");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("my.shop.ProductDao");
    _jspx_imports_classes.add("my.shop.CategoryBean2");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	.1{\n");
      out.write("		font-size: 2px;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("\n");
      out.write("hr{\n");
      out.write("		border-bottom: none;\n");
      out.write("		border-left: none;\n");
      out.write("		border-right: none;\n");
      out.write("}	\n");
      out.write("\n");
      out.write("nav input{ /* 검색어 */\n");
      out.write("	border-color: #565656;\n");
      out.write("	background-image: url(\"");
      out.print(request.getContextPath());
      out.write("/images/search.jpg\");\n");
      out.write("	background-repeat: no-repeat;\n");
      out.write("	background-position: right;\n");
      out.write("	border-radius: 15px;\n");
      out.write("	background-size: 25px;\n");
      out.write("	outline: none;\n");
      out.write("}  \n");
      out.write("\n");
      out.write(".top ul { /* 로그인 칸*/\n");
      out.write("	list-style-type: none;\n");
      out.write("	/* 좌측 여백 없애기 */\n");
      out.write("	padding-left: 0px;\n");
      out.write("	/* 우측 정렬 하기 */\n");
      out.write("	float: right;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li { /* 로그인칸 */\n");
      out.write("	display: inline;\n");
      out.write("	border-left: 1px solid;\n");
      out.write("	padding: 0px 10px 0px 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li:first-child { /* 로그인버튼 */\n");
      out.write("	border-left: none;\n");
      out.write("}\n");
      out.write("a{\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: #565656; /* #5d5d5d */\n");
      out.write("}\n");
      out.write(".top{\n");
      out.write("	font-size:12px;\n");
      out.write("	width: 300px;\n");
      out.write("	height: 30px;\n");
      out.write("}\n");
      out.write(".newlogin{\n");
      out.write("	color: #72aa37;\n");
      out.write("} \n");
      out.write("body {	/* 전체 글꼴 */\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".bottom{\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write("/*====================================  */ \n");
      out.write("\n");
      out.write("*{ \n");
      out.write("  list-style: none;\n");
      out.write("}\n");
      out.write("a {\n");
      out.write("  text-decoration: none;\n");
      out.write("  color: #57523E;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#menu{\n");
      out.write("  position:relative; \n");
      out.write("  z-index: 99; \n");
      out.write("  background-color: white;\n");
      out.write("  height: 50px;\n");
      out.write("  text-align: center;\n");
      out.write("  width: 300px;\n");
      out.write("  margin-left: 400px; \n");
      out.write("}\n");
      out.write(" \n");
      out.write("[class*=\"main\"] {\n");
      out.write("  background-color: white;\n");
      out.write("  border-radius: 5px 5px 5px 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("[class*=\"main\"] ul {\n");
      out.write("  border-radius: 5px 5px 5px 5px;\n");
      out.write("  border: 1px solid #57523E;\n");
      out.write("}\n");
      out.write(".main1{\n");
      out.write("  padding-left: 0px;\n");
      out.write("   height: 100%;\n");
      out.write("  width: 1000px;\n");
      out.write("  margin: 0 auto;\n");
      out.write("  display: inline-block;\n");
      out.write("}\n");
      out.write(".main1>li {\n");
      out.write("  float: left;\n");
      out.write("  width: 13%;\n");
      out.write("  line-height: 50px;\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write(".main1>li:hover .main2 {\n");
      out.write("  left: 0;\n");
      out.write("}\n");
      out.write(".main1>li a {\n");
      out.write("  display: block;\n");
      out.write("}\n");
      out.write(".main1>li a:hover {\n");
      out.write("  font-weight: bold;\n");
      out.write("}\n");
      out.write(".main2 {\n");
      out.write("	text-align:left;\n");
      out.write("  width:170%;\n");
      out.write("  position: absolute;\n");
      out.write("  top: 50px;\n");
      out.write("  left: -9999px;\n");
      out.write("  padding: 0px;\n");
      out.write("}\n");
      out.write(".main1>li:hover {\n");
      out.write("  border-bottom: 3px solid #8ca86e;\n");
      out.write("}\n");
      out.write(".main1>li:hover:last-child {\n");
      out.write("  border-bottom: white; /* 장바구니 밑에 색없애기위해. */\n");
      out.write("} \n");
      out.write(".main2 li:hover {\n");
      out.write("  border-left: 4px solid #8ca86e;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main2>li {\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write(".main2>li:hover .main3 {\n");
      out.write("  left: 100%;\n");
      out.write("}\n");
      out.write(".main2>li a, .main3>li a {\n");
      out.write("  border-radius: 10px;\n");
      out.write("  margin: 10px;\n");
      out.write("}  \n");
      out.write(".main3 {\n");
      out.write("  position: absolute;\n");
      out.write("  top: -10px;\n");
      out.write("  width: 100%;\n");
      out.write("  left: -9999px;\n");
      out.write("  padding: 0px;\n");
      out.write("}\n");
      out.write(".main3>li a:hover {\n");
      out.write("  color: #5d5d5d;\n");
      out.write("}\n");
      out.write("nav {\n");
      out.write("  margin-top: 20px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery.js\"></script>\n");
      out.write("<script>\n");
      out.write("	function ClickCartList(){\n");
      out.write("		var id ='");
      out.print((String)session.getAttribute("id"));
      out.write("';\n");
      out.write("		if(id==\"null\"){\n");
      out.write("			if(confirm(\"로그인이 필요한 페이지 입니다.\\n 로그인 하시겠습니까?\")){\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("\" + \"/login.jsp\";\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			   location.href=\"");
      out.print(request.getContextPath());
      out.write("\" + \"/guest/cartList.jsp\";\n");
      out.write("			}\n");
      out.write("		\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write(" <head> <!-- notosans 폰트 적용 -->\n");
      out.write(" 	 <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\n");
      out.write("<body>\n");

	/*id 에 해당하는 이름 가져오기  */
	//String id =(String)session.getAttribute("id");
	String id = "admin";
	
	MemberDao mdao = MemberDao.getinstance();
	MemberBean mb = mdao.getMemberById(id);
	System.out.println(mb);
	

      out.write("\n");
      out.write("\n");
      out.write("<form>\n");
      out.write("	<input type=\"hidden\" name=\"id\"value=\"");
      out.print(id );
      out.write("\">\n");
      out.write("</form>\n");
      out.write("<div class=\"top\" align=\"right\">\n");
      out.write("	<ul>\n");
      out.write("		");

			if(id!=null){
		
      out.write("\n");
      out.write("			<li><a class=\"newlogin\" href=\"");
      out.print(request.getContextPath() );
      out.write("/mypage.jsp?id=");
      out.print(mb.getId());
      out.write("\"><font color=\"#8ca86e\">");
      out.print(mb.getName() );
      out.write("님</font> <font color=\"#5d5d5d\">마이페이지</font></a></li>\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/logout.jsp\">로그아웃</a></li>\n");
      out.write("		");
	
		}
			else{
		
      out.write("\n");
      out.write("			<li><a class=\"newlogin\" href=\"");
      out.print(request.getContextPath() );
      out.write("/newlogin.jsp\">회원가입</a></li>\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/login.jsp\">로그인</a></li>\n");
      out.write("		");
	
		}
		
      out.write("\n");
      out.write("			<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/Board/list.jsp\">고객센터</a></li>\n");
      out.write("	</ul>\n");
      out.write("		\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- 로고  -->\n");
      out.write("\n");
      out.write("<div align=\"center\" class=\"logo\">\n");
      out.write("	<a href=\"");
      out.print(request.getContextPath() );
      out.write("/main.jsp\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/logo.jpg\" width=400 height=150></a>\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--상단 메뉴바  -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 일반 사용자일때 메뉴바 -->\n");
      out.write("<div id=\"menu\">\n");
      out.write("  <ul class=\"main1\">\n");
      out.write("    <li style=\"border: none;\"><a href=\"#\"><b style=\"font-size: 20px;\"><span style=\"font-size: 20px;\">≡</span> 카테고리</b></a>\n");
      out.write("      <ul class=\"main2\">\n");
      out.write("        \n");
      out.write("            ");

        CategoryDao cdao = CategoryDao.getinstance();
      	CategoryDao2 cdao2 = CategoryDao2.getinstance();
        
      	ArrayList<CategoryBean>lists = cdao.getAllCategory(); 
      	ArrayList<CategoryBean2>list = null;
        
      	System.out.println("CategoryBean list:"+lists.size());
		System.out.println("CategoryBean2 list:"+lists.size());
        for(CategoryBean cb : lists){
        
      out.write("\n");
      out.write("    <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/guest/outCategory.jsp?code1=");
      out.print(cb.getCode1());
      out.write("\"><img width=\"30px\" height=\"30px\" src=\"");
      out.print(request.getContextPath());
      out.write("/images/");
      out.print(cb.getCode1());
      out.write(".png\">&nbsp;&nbsp;");
      out.print(cb.getCname() );
      out.write("</a>\n");
      out.write("      <ul class=\"main3\">\n");
      out.write("      			 ");

      			 	list = cdao2.getAllCategory(cb.getCode1()); 
      			 	for(CategoryBean2 cb2 : list){
      			 
      out.write("\n");
      out.write("        			<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/guest/inCategory.jsp?code1=");
      out.print(cb2.getCode1());
      out.write("&code2=");
      out.print(cb2.getCode2());
      out.write('"');
      out.write('>');
      out.print(cb2.getCname() );
      out.write("</a></li>\n");
      out.write("        		");

      			 	}//CategoryBean2
        		
      out.write("\n");
      out.write("      </ul>\n");
      out.write("   	</li>\n");
      out.write("   		 ");

   		 }//CategoryBean 
   		 
      out.write("\n");
      out.write("      </ul>\n");
      out.write("    </li>\n");
      out.write("    ");

		String[] menubar={"BEST","신상품","알뜰상품","기획상품"};				
		for(int i=0;i<menubar.length;i++){
		
      out.write("\n");
      out.write("			    <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/guest/mainmenu.jsp?pspec=");
      out.print(menubar[i]);
      out.write('"');
      out.write('>');
      out.print(menubar[i] );
      out.write("</a></li>\n");
      out.write("		");
	
		}
		
      out.write("\n");
      out.write("    <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/coupon.jsp\">특가 / 혜택</a></li>\n");
      out.write("    <li style=\"margin-left: 50px;padding-bottom: 0;\"><a href=\"javascript:ClickCartList()\"><img width=\"35px\" height=\"35px\" src=\"");
      out.print(request.getContextPath());
      out.write("/images/cart.png\"></a></li>\n");
      out.write("    </ul>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<hr width=80% class=\"categoryhr\">\n");
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

	String code1 = request.getParameter("code1");
	System.out.println("code1 :"+code1);
	String code2="";
	
	ProductDao pdao = ProductDao.getinstance();
	
	CategoryBean cb = cdao.getCateByCode1(code1);
	ArrayList<ProductBean>plists =  pdao.getProductByCode2(code1, code2);
	

      out.write("\n");
      out.write("<table align=\"center\" width=35%>\n");
      out.write("	<tr align=\"center\">\n");
      out.write("	");

	if(plists.size()==0){
	
      out.write("\n");
      out.write("		<td>\n");
      out.write("			<img width=\"800px\" height=\"400px\" alt=\"준비중입니다.\" src=\"");
      out.print(request.getContextPath());
      out.write("/images/ready.png\">\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("	");
	
	}
	else{
	
      out.write("\n");
      out.write("	\n");
      out.write("	<tr align=\"center\">\n");
      out.write("		<td align=\"center\" colspan=\"3\" height=\"100px\">\n");
      out.write("		<h2>");
      out.print(cb.getCode1() );
      out.write("</h2>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("	<tr>\n");
      out.write("		<td colspan=\"3\" style=\"text-align: left; margin-left: 50px;\">\n");
      out.write("		<font size=\"2px;\"><b>");
if(plists.size()!=0){
      out.write('총');
      out.print(plists.size() );
      out.write('건');
} 
      out.write("</b></font>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("	");

	
      out.write("\n");
      out.write("		<tr>\n");
      out.write("				");

				if(plists.size()==0){
				
      out.write("\n");
      out.write("					<td>\n");
      out.write("						<h2>준비중입니다</h2>\n");
      out.write("					</td>\n");
      out.write("				");
	
				}
				int i=1;
				for(ProductBean pb : plists){
				String rContext = request.getContextPath() + "/admin/images/";
				String fullPath = rContext + pb.getPimage();
				DecimalFormat df = new DecimalFormat("###,###");
				
      out.write("\n");
      out.write("			<td style=\"padding: 20px\">\n");
      out.write("				\n");
      out.write("				<a href=\"detailProduct.jsp?pnum=");
      out.print(pb.getPnum());
      out.write("\"><img src=\"");
      out.print(fullPath);
      out.write("\" width=\"360px\" height=\"410px\"></a><br>\n");
      out.write("				\n");
      out.write("				<font size=\"2px;\" color=\"908f8f\">샛별배송</font><br>\n");
      out.write("				\n");
      out.write("				<font >");
      out.print(pb.getPname() );
      out.write("</font><br>\n");
      out.write("				\n");
      out.write("				<b>");
      out.print(df.format(pb.getPrice()) );
      out.write("원</b><br>\n");
      out.write("				\n");
      out.write("				<font size=\"2px;\" color=\"908f8f\">");
      out.print(pb.getPcontents() );
      out.write("</font>\n");
      out.write("			</td>\n");
      out.write("				");
		
				if(i%3==0){
				
      out.write("\n");
      out.write("		</tr>\n");
      out.write("				");

				}//if
				i++;
					}//for
				}//맨위 제목 for
		
      out.write("\n");
      out.write("	<tr height=\"350px\">\n");
      out.write("		<td>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	.bottomtop{\n");
      out.write("		font-size: 15px;\n");
      out.write("	}\n");
      out.write("	.bottombt{\n");
      out.write("		font-size: 12px;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<!-- bottom -->\n");
      out.write("<br>\n");
      out.write("<hr width=80% class=\"categoryhr\">\n");
      out.write("\n");
      out.write("<table  width=80% align=\"center\">\n");
      out.write("	<tr>\n");
      out.write("		<th width=\"30%\" align=\"left\" class=\"bottomtop\">Yelmiya(주)</th>\n");
      out.write("		<th width=\"30%\" align=\"left\" class=\"bottomtop\">고객센터</th>\n");
      out.write("		<th width=\"30%\" align=\"left\" class=\"bottomtop\">전자금융가레 분쟁처리</th>\n");
      out.write("	</tr>\n");
      out.write("	<tr>\n");
      out.write("		<td>\n");
      out.write("			<table>\n");
      out.write("				<tr align=\"left\">\n");
      out.write("					<td width=\"80%\" class=\"bottombt\">사업자등록번호 123-456-00000 통신판매업신고번호 0000-인천-0123호\n");
      out.write("						대표이사 박찬호 인천시 95, NAVER 0000, 12345\n");
      out.write("						전화 1588-0000이메일 chanho159@naver.com사업자등록정보 확인\n");
      out.write("					<td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("		<td>\n");
      out.write("			<table>\n");
      out.write("				<tr align=\"left\">\n");
      out.write("					<td width=\"80%\" class=\"bottombt\">\n");
      out.write("					인천시 계양구 중앙길 12 중앙회관\n");
      out.write("					전화 1588-0000\n");
      out.write("					결제도용신고 1588-0000\n");
      out.write("					<td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("		<td>\n");
      out.write("			<table>\n");
      out.write("				<tr align=\"left\">\n");
      out.write("					<td width=\"80%\" class=\"bottombt\">\n");
      out.write("					전화 1589-0000\n");
      out.write("					<td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("</table>\n");
      out.write("</body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
