/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-01-09 09:43:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class text_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\n");
      out.write(".category input{ /* 검색어 */\n");
      out.write("	border-color: #565656;\n");
      out.write("	background-image: url(\"");
      out.print(request.getContextPath());
      out.write("/images/search.jpg\");\n");
      out.write("	background-repeat: no-repeat;\n");
      out.write("	background-position: right;\n");
      out.write("	border-radius: 15px;\n");
      out.write("	background-size: 25px;\n");
      out.write("	outline: none;\n");
      out.write("}  \n");
      out.write("\n");
      out.write(".top ul { /* 로그인 칸*/\n");
      out.write("	list-style-type: none;\n");
      out.write("	/* 좌측 여백 없애기 */\n");
      out.write("	padding-left: 0px;\n");
      out.write("	/* 우측 정렬 하기 */\n");
      out.write("	float: right;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li { /* 로그인칸 */\n");
      out.write("	display: inline;\n");
      out.write("	border-left: 1px solid;\n");
      out.write("	padding: 0px 10px 0px 10px;\n");
      out.write("	margin: 5px 0px 5px 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top ul li:first-child { /* 로그인버튼 */\n");
      out.write("	border-left: none;\n");
      out.write("}\n");
      out.write("a{\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: #565656; /* #5d5d5d */\n");
      out.write("}\n");
      out.write(".login{\n");
      out.write("	color: #72aa37;\n");
      out.write("}\n");
      out.write(".top{\n");
      out.write("	margin-left :1000px;\n");
      out.write("	font-size:12px;\n");
      out.write("	width: 300px;\n");
      out.write("	height: 30px;\n");
      out.write("}\n");
      out.write(".logo{	/* 로고 */\n");
      out.write("	margin-left: 500px;\n");
      out.write("}\n");
      out.write("body {	/* 전체 글꼴 */\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\n");
      out.write("}\n");
      out.write(".category>li{	/* 카테고리안에것들 */\n");
      out.write("	color: #5d5d5d;\n");
      out.write("	list-style-type: none;\n");
      out.write("	float: left;\n");
      out.write("	margin-left: 130px; \n");
      out.write("} \n");
      out.write(".category>li:first-child{\n");
      out.write("	margin-left : 180px;\n");
      out.write("	margin-right: 40px;\n");
      out.write("}\n");
      out.write(".category>li{\n");
      out.write("	display: inline;\n");
      out.write("}\n");
      out.write(" \n");
      out.write(".incategory>li{\n");
      out.write("	list-style-type: none;\n");
      out.write("}\n");
      out.write(".incategory{\n");
      out.write("	\n");
      out.write("}\n");
      out.write(".bottom{\n");
      out.write("	color: #5d5d5d;\n");
      out.write("}\n");
      out.write(".categoryhr{\n");
      out.write("	height: 2px;\n");
      out.write("} \n");
      out.write("/*===============================  */\n");
      out.write("\n");
      out.write("\n");
      out.write("/*body 초기화*/\n");
      out.write("body {\n");
      out.write("  margin: 0;\n");
      out.write("  padding: 0;\n");
      out.write("  display: flex;\n");
      out.write("  flex-flow: column nowrap;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  overflow-x: hidden;  \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("  width: 100%;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul, li {\n");
      out.write("  margin: 0;\n");
      out.write("  padding: 0;\n");
      out.write("  list-style: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".category > li {\n");
      out.write("  float: left;\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".category > li > a {\n");
      out.write("  font-size: 0.85rem;\n");
      out.write("  color: rgba(255,255,255,0.85);\n");
      out.write("  text-align: center;\n");
      out.write("  text-decoration: none;\n");
      out.write("  letter-spacing: 0.05em;\n");
      out.write("  display: block;\n");
      out.write("  padding: 14px 36px;\n");
      out.write("  border-right: 1px solid rgba(0,0,0,0.15);\n");
      out.write("  text-shadow: 1px 1px 1px rgba(0,0,0,0.2);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".category > li:nth-child(1) > a {\n");
      out.write("  border-left: 1px solid rgba(0,0,0,0.15);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".incategory {\n");
      out.write("  position: absolute;\n");
      out.write("  background: white;\n");
      out.write("  opacity: 0;\n");
      out.write("  visibility: hidden;\n");
      out.write("  transition: all 0.15s ease-in;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".incategory > li {\n");
      out.write("  padding: 16px 28px;\n");
      out.write("  border-bottom: 1px solid rgba(0,0,0,0.15);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".incategory > li >  a {\n");
      out.write("  color: #5d5d5d;\n");
      out.write("  text-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".category > li:hover .incategory {\n");
      out.write("  opacity: 1;\n");
      out.write("  visibility: visible;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".incategory > li >  a:hover {\n");
      out.write(" text-decoration: underline;\n");
      out.write("}\n");
      out.write(" \n");
      out.write("\n");
      out.write("/*===============================  */\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- ==================jquery ==================================================== -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery.js\"></script>\n");
      out.write("<script>\n");
      out.write("</script>\n");
      out.write(" <head> <!-- notosans 폰트 적용 -->\n");
      out.write(" 	 <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\n");
      out.write(" </head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"top\">\n");
      out.write("	<ul>\n");
      out.write("		<li><a class=\"login\" href=\"login.jsp\"><img width=50 height=30 src=\"");
      out.print(request.getContextPath());
      out.write("/images/login.jpg\">로그인</a></li>\n");
      out.write("		<li><a href=\"newlogin.jsp\">회원가입</a></li>\n");
      out.write("		<li><a href=\"help.jsp\">고객센터</a></li>\n");
      out.write("	</ui>\n");
      out.write("		\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- 로고  -->\n");
      out.write("<div align=\"center\" class=\"logo\">\n");
      out.write("	<a href=\"main.jsp\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/logo.jpg\" width=400 height=150></a>\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--상단 메뉴바  -->\n");
      out.write("<nav role=\"navigation\">\n");
      out.write("		<ul class=\"category\">\n");
      out.write("			<li class=\"firstcategory\">\n");
      out.write("				<a href=\"\">카테고리</a>\n");
      out.write("				<ul class=\"incategory\" ><!-- li에 for문으로 카테고리 들어가야함. -->\n");
      out.write("					<li><a href=\"\" aria-label=\"subemnu\">카테고리1</a></li>\n");
      out.write("					<li><a href=\"\" aria-label=\"subemnu\">카테고리1</a></li>\n");
      out.write("					<li><a href=\"\" aria-label=\"subemnu\">카테고리1</a></li>\n");
      out.write("					<li><a href=\"\" aria-label=\"subemnu\">카테고리1</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</li>\n");
      out.write("			<li ><a href=\"new.jsp\">신상품</a></li>\n");
      out.write("			<li ><a href=\"best.jsp\">베스트</a></li>\n");
      out.write("			<li ><a href=\"new.jsp\">기획전</a></li>\n");
      out.write("			<li ><a href=\"good.jsp\">혜택 / 쿠폰</a></li>\n");
      out.write("			<li><input type=\"text\" placeholder=\" 검색어를 입력해주세요\"  style=\"width:150px;height:30px;font-size:10px; border: 1px solid #565656; \"></li>\n");
      out.write("		</ul>\n");
      out.write("	\n");
      out.write("</nav><br>\n");
      out.write("<!--  -->\n");
      out.write("\n");
      out.write("<hr width=80% class=\"categoryhr\">\n");
      out.write("<div>\n");
      out.write("	 ");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- bottom -->\n");
      out.write("<br>\n");
      out.write("<hr width=80% class=\"categoryhr\">\n");
      out.write("\n");
      out.write("<table border=\"1px\" width=80% align=\"center\">\n");
      out.write("	<tr>\n");
      out.write("		<td>\n");
      out.write("			<table class=\"bottom\" width=40%> <!-- 왼쪽편 -->\n");
      out.write("				<tr>\n");
      out.write("					<th>고객센터</th>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td>사업자등록번호 123-456-00000 통신판매업신고번호 0000-인천-0123호\n");
      out.write("대표이사 박찬호 인천시 95, NAVER 0000, 12345\n");
      out.write("전화 1588-0000이메일 chanho159@naver.com사업자등록정보 확인</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("		<td>\n");
      out.write("			<table width=30% border=\"1px\">\n");
      out.write("			\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("	<tr>\n");
      out.write("		<td>\n");
      out.write("			<table width=30% border=\"1px\">\n");
      out.write("			\n");
      out.write("			</table>\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("</table>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
