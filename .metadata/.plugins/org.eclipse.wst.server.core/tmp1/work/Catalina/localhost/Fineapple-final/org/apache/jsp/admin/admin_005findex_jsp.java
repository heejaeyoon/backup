/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-01-18 01:35:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import bean.MemberVo;
import java.util.ArrayList;
import bean.MemberDao;

public final class admin_005findex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/admin/../main/footer.jsp", Long.valueOf(1610427408000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("bean.MemberVo");
    _jspx_imports_classes.add("bean.MemberDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>관리자페이지</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/footer.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/admin_index.css\">\n");
      out.write("    <link rel=\"shortcut icon\" href=\"../images/favicon.png\">\n");
      out.write("    <link rel=\"icon\" href=\"favicon.ico\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      bean.MemberDao dao = null;
      dao = (bean.MemberDao) _jspx_page_context.getAttribute("dao", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dao == null){
        dao = new bean.MemberDao();
        _jspx_page_context.setAttribute("dao", dao, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("  \n");
      out.write("		<!-- header영역 -->\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/header.jsp", out, false);
      out.write("\n");
      out.write("	\n");
      out.write("	<header class=\"cs_func_page_header\">\n");
      out.write("		<h1 style=\"font-size: 2em;\">관리자페이지</h1>\n");
      out.write("		<div class=\"cs_category\">\n");
      out.write("			<a href=\"admin_member.jsp\">회원 관리</a>\n");
      out.write("			<a href=\"");
      out.print(request.getContextPath() );
      out.write("/admin.do?job=productSelect\">상품 관리</a>\n");
      out.write("			<a href=\"admin_sum.jsp\">매출 달력</a>\n");
      out.write("		</div>\n");
      out.write("</header>\n");
      out.write("	\n");
      out.write("<div class=\"admin-container\">\n");
      out.write("\n");
      out.write("\n");
      out.write("	<h2> 전체 회원 관리</h2>\n");
      out.write("\n");
      out.write("\n");
      out.write("	<table class = \"admin-table\" style=\"width:100%\" >\n");
      out.write("\n");
      out.write("		<tr >\n");
      out.write("\n");
      out.write("			<th>아이디</th><th>회원명</th><th>이메일</th><th>전화</th><th>주소</th>\n");
      out.write("\n");
      out.write("		</tr>\n");
      out.write("\n");
      out.write("	");

	ArrayList<MemberVo> list = dao.getMemberAll();

	for(MemberVo vo : list){
	
      out.write("\n");
      out.write("			<tr>\n");
      out.write("				<td>");
      out.print(vo.getMember_mid() );
      out.write("</td>\n");
      out.write("				<td>");
      out.print(vo.getMember_name() );
      out.write("</td>\n");
      out.write("				<td>");
      out.print(vo.getMember_email() );
      out.write("</td>\n");
      out.write("				<td>");
      out.print(vo.getMember_phone() );
      out.write("</td>\n");
      out.write("				<td>");
      out.print(vo.getMember_address() );
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("	");
} 
      out.write("\n");
      out.write("	</table>	\n");
      out.write("	<form action=\"member_modify_admin_form.jsp\" name=\"modifyFrm\" method=\"post\">\n");
      out.write("		<input type=\"hidden\" name=\"id\">\n");
      out.write("	</form>\n");
      out.write("</div>\n");
      out.write("		<div class = 'btns'>\n");
      out.write("		<input type = 'button' value = '<'/>\n");
      out.write("		<input type = 'button'class = 'num' value = '1'>\n");
      out.write("		<input type = 'button' value = '>'/>\n");
      out.write("	</div>\n");
      out.write("			\n");
      out.write("   <!-- footer영역 -->\n");
      out.write("   	");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<footer class=\"home_footer_container\">\n");
      out.write("	<div class=\"footer_header\"> \n");
      out.write("		<p>* 보상 판매 프로그램은 FineApple의 파트너이자 독립적으로 운영되는 제3의 업체에\n");
      out.write("		의해 제공됩니다. FineApple 및 FineApple의 계열사는 고객과 파트너 간 계약의 당사자가 아닙니다. 보상 판매 금액은 보상\n");
      out.write("		판매되는 스마트폰의 상태 및 모델에 따라 달라집니다. 19세 이상이어야 합니다. 일부 매장에서는 본 프로그램을 이용할 수\n");
      out.write("		없으며, 일부 기기는 보상 판매 대상이 아닙니다. FineApple은 어떤 기기든 수령을 거부하거나, 그 수량을 제한할 권리를\n");
      out.write("		보유합니다. 새 FineApple 기기 구매 시, 현재 소유한 기기의 가치만큼 할인을 받을 수도 있습니다. 추가 약관은\n");
      out.write("		FineApple.com/kr/trade-in을 참고하십시오.</p>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<div class=\"footer_body\">\n");
      out.write("		<div>\n");
      out.write("			<ul class=\"foot-main-list\">\n");
      out.write("		    	<li>\n");
      out.write("		            <h4>제품 알아보기</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"javascript:phoneSite()\">휴대폰</a></li>\n");
      out.write("		        <li><a href=\"javascript:laptopSite()\">노트북</a></li>\n");
      out.write("		        <li><a href=\"javascript:tabletSite()\">태블릿PC</a></li>\n");
      out.write("		        <li><a href=\"javascript:watchSite()\">스마트 워치</a></li>\n");
      out.write("		        <li><a href=\"javascript:accessorySite()\">악세서리</a></li>\n");
      out.write("		    </ul>\n");
      out.write("		</div>\n");
      out.write("		<div>\n");
      out.write("		    <ul class=\"foot-main-list\">\n");
      out.write("		        <li>\n");
      out.write("		            <h4>소개</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/intro/intro.jsp\">회사 소개</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/intro/vision.jsp\">회사 비전</a></li>\n");
      out.write("		        </br>\n");
      out.write("		        <li>\n");
      out.write("		            <h4>커뮤니티</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/notice/notice.jsp\">공지사항</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/event/event.jsp\">이벤트</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/review.do?job=select\">리뷰 게시판</a></li>\n");
      out.write("		    </ul>\n");
      out.write("		</div>\n");
      out.write("		<div>\n");
      out.write("		    <ul class=\"foot-main-list\">\n");
      out.write("		        <li>\n");
      out.write("		            <h4>고객 지원</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/inquiry.do?job=select\">Q&A 게시판</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/faqbook.do?qa=selectFaq\">FAQ</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/cs_center/cs_func_page.jsp?func=../cs_center/cs_map.jsp\">오시는 길</a></li>\n");
      out.write("	   	   	    <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/login/loginfo.jsp\">로그인</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/UsersJoin/agree.jsp\">회원 가입</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/login/findId.jsp\">아이디 찾기</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/login/findPw.jsp\">비밀번호 찾기</a></li>\n");
      out.write("		        \n");
      out.write("		    </ul>\n");
      out.write("		</div>\n");
      out.write("		<div>\n");
      out.write("		    <ul class=\"foot-main-list\">\n");
      out.write("		        <li>\n");
      out.write("		            <h4>고객 정보</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/mypage/cart.jsp\">장바구니</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/mypage/orderlist.jsp\">정보 수정</a></li>\n");
      out.write("		        <li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/mypage/coupon.jsp\">주문 내역</a></li>\n");
      out.write("		        <li><a href=\"#\">찜목록</a></li>\n");
      out.write("		        <li><a href=\"#\">쿠폰함</a></li>\n");
      out.write("		    </ul>\n");
      out.write("		\n");
      out.write("		</div>\n");
      out.write("		<div>\n");
      out.write("		    <ul class=\"foot-main-list\">\n");
      out.write("		        <li>\n");
      out.write("		            <h4>FINEAPPLE 정보</h4>\n");
      out.write("		        </li>\n");
      out.write("		        <li><a href=\"#\">Newsroom</a></li>\n");
      out.write("		        <li><a href=\"#\">FINEAPPLE 리더쉽</a></li>\n");
      out.write("		        <li><a href=\"#\">채용 안내</a></li>\n");
      out.write("		        <li><a href=\"#\">개인정보 보호</a></li>\n");
      out.write("		        <li><a href=\"#\">협력업체에 대한 책임</a></li>\n");
      out.write("		    </ul>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<div class=\"footer_footer\">\n");
      out.write("		<div id=\"foot-bottom1\">\n");
      out.write("			<p>다양한 쇼핑 방법: FineApple Store를 방문하거나, 리셀러를 찾아보거나, 010-41991479번으로 전화하세요.</p>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"foot-bottom2\">\n");
      out.write("			<p>사업자등록번호 : 123-45-67890 | 통신판매업신고번호 : 제 2011-서울강남-00810호 | 대표이사 : 정희석 | 주소 : 서울 특별시 강남구 영동대로 517 | 대표전화 : 010-4199-1479 | 팩스 : 02-2060-1479</p>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("</footer>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
